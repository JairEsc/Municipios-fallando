turismo_trata=leaflet()|>setView(-98.88704,20.47901,zoom = 08)|>addTiles(options = tileOptions(minZoom=8,opacity = 0.7))
# turismo_trata=turismo_trata|>
#   addPolygons(data=empresas_adheridas_codigo|>st_transform("EPSG:4326")|>as("Spatial"),
#               ,fillOpacity = 0,stroke = T,color = paleta_verdes(empresas_adheridas_codigo$empresas_a|>as.numeric()|>escala_01()|>trasla_a_b(0.25,1)),
#               group = "Empresas adheridas al c√≥digo -")
#Modalidades del delito
#st_centroid(turismo_shp|>st_transform("EPSG:4326")|>st_union())
turismo_trata=turismo_trata|>
  addPolygons(data=turismo_shp|>st_transform("EPSG:4326")|>as("Spatial"),fillOpacity = 0,weight = 0.8,color = "black",label = ~turismo_shp$NOM_MUN,group = "buscador")|>
  addPolygons(data=turismo_shp|>st_transform("EPSG:4326")|>as("Spatial"),stroke = T,color =paleta_verdes(turismo_shp$empresas_a|>as.numeric()|>escala_01()|>trasla_a_b(0.15,1)) ,fillColor = paleta_rojos(turismo_shp$incidentes_total|>escala_01()|>trasla_a_b(0.15,1)),
              group = "Modalidades de delito",
              label = ~
                paste(
                  "<b>Municipio: </b>", htmlEscape(turismo_shp$NOM_MUN), "<br>",
                  ifelse(!is.na(turismo_shp$empresas_a), 
                         paste0("<b>Empresas adheridas al c√≥digo CCN: </b>",turismo_shp$empresas_a),
                         ""),
                  ifelse(!is.na(turismo_shp$incidentes_total), 
                         paste0("<table style='border-collapse: collapse; width: 100%; font-size: 12px;'>",
                                "<tr><th style='border: 1px solid black; padding: 4px; text-align: center;'>Tipo de Delito</th>",
                                "<th style='border: 1px solid black; padding: 4px; text-align: center;'>Cantidad</th></tr>"),
                         ""),
                  
                  
                  # Para cada delito, solo lo mostramos si el valor es mayor a 0
                  ifelse(turismo_shp$`Explotaci√≥n de la prostituci√≥n ajena` > 0, 
                         paste0("<tr><td style='border: 1px solid black; padding: 4px; text-align: center;'>Explotaci√≥n de la prostituci√≥n ajena</td><td style='border: 1px solid black; padding: 4px; text-align: center;'>", turismo_shp$`Explotaci√≥n de la prostituci√≥n ajena`, "</td></tr>"),
                         ""),
                  
                  ifelse(turismo_shp$`Explotaci√≥n laboral` > 0, 
                         paste0("<tr><td style='border: 1px solid black; padding: 4px; text-align: center;'>Explotaci√≥n laboral</td><td style='border: 1px solid black; padding: 4px; text-align: center;'>", turismo_shp$`Explotaci√≥n laboral`, "</td></tr>"),
                         ""),
                  
                  ifelse(turismo_shp$`Circulaci√≥n de pornograf√≠a` > 0, 
                         paste0("<tr><td style='border: 1px solid black; padding: 4px; text-align: center;'>Circulaci√≥n de pornograf√≠a</td><td style='border: 1px solid black; padding: 4px; text-align: center;'>", turismo_shp$`Circulaci√≥n de pornograf√≠a`, "</td></tr>"),
                         ""),
                  
                  ifelse(turismo_shp$`Utilizaci√≥n de menores de 18 a√±os en hechos delictivos` > 0, 
                         paste0("<tr><td style='border: 1px solid black; padding: 4px; text-align: center;'>Utilizaci√≥n de menores de 18 a√±os en hechos delictivos</td><td style='border: 1px solid black; padding: 4px; text-align: center;'>", turismo_shp$`Utilizaci√≥n de menores de 18 a√±os en hechos delictivos`, "</td></tr>"),
                         ""),
                  
                  ifelse(turismo_shp$`Otras formas de explotaci√≥n sexual` > 0, 
                         paste0("<tr><td style='border: 1px solid black; padding: 4px; text-align: center;'>Otras formas de explotaci√≥n sexual</td><td style='border: 1px solid black; padding: 4px; text-align: center;'>", turismo_shp$`Otras formas de explotaci√≥n sexual`, "</td></tr>"),
                         ""),
                  
                  ifelse(turismo_shp$Esclavitud > 0, 
                         paste0("<tr><td style='border: 1px solid black; padding: 4px; text-align: center;'>Esclavitud</td><td style='border: 1px solid black; padding: 4px; text-align: center;'>", turismo_shp$Esclavitud, "</td></tr>"),
                         ""),
                  ifelse(!is.na(turismo_shp$incidentes_total), 
                         paste0("<tr><th style='border: 1px solid black; padding: 4px; text-align: center;'>Total</th><td style='border: 1px solid black; padding: 4px; text-align: center;'>", turismo_shp$incidentes_total, "</td></tr>"),
                         ""),
                  
                  
                  "</table>"
                ) |>
                sapply(FUN = function(x) HTML(x), USE.NAMES = F) |>
                `class<-`("html"),
              labelOptions = labelOptions(textsize = 14, direction = "top")
  )

#-----------------------

#Empresas adheridas al c√≥digo

#-----------------------
#Empresas relacionadas
marker_size_default=20
marker_transporte=makeIcon(
  iconUrl = "Turismo/mapa web/imagenes/autobus.png",
  iconWidth = marker_size_default, iconHeight = marker_size_default,
)
marker_viaje=makeIcon(
  iconUrl = "Turismo/mapa web/imagenes/avion.png",
  iconWidth = marker_size_default, iconHeight = marker_size_default,
)
marker_turismo=makeIcon(
  iconUrl = "Turismo/mapa web/imagenes/turismo.png",
  iconWidth = 15, iconHeight = 15,
)
markers_empresas_rel=list(marker_transporte,
                          marker_viaje
)

turismo_trata=turismo_trata|>
  addRasterImage(dens_hospedaje,colors = "Blues",group = "Hospedaje",options  = tileOptions(minZoom = 9))|>
  addRasterImage(dens_alimentos,colors = "Purples",group = "Alimentos",options  = tileOptions(minZoom = 9))

for(i in 1:2){
  turismo_trata=turismo_trata|>
    addMarkers(data=empresas_rel_tur[[i]]|>st_transform("EPSG:4326")|>as("Spatial"),
               icon=markers_empresas_rel[[i]],group = "Viajes y Transporte")
}
turismo_trata=turismo_trata|>addMarkers(data=sitios_turisticos_puntos|>st_cast("POINT")|>st_coordinates(),group = "Sitios Tur√≠sticos",
                                        icon=marker_turismo)
turismo_trata=turismo_trata|>
  addLayersControl(overlayGroups = c("Modalidades de delito","Sitios Tur√≠sticos")
                   ,
                   options = layersControlOptions(collapsed=F))|>
  htmlwidgets::onRender("
    function(el, x) {
      let map=this;
      function resizeMarkers() {
      var zoom = map.getZoom();
      // Cambiar el tama√±o de cada marcador
      map.eachLayer(function(layer) {
        if (layer.options && layer.options.icon && layer.options.icon.options) {
          var newSize;
          if (layer.options.group === 'Viajes y Transporte' ) {
            newSize = zoom<=9?20:zoom==10?30:
            zoom==11?40:zoom==12?50:zoom==13?60:80}
          else{
            newSize = zoom<=9?12:zoom==10?20:
            zoom==11?30:zoom==12?45:zoom==13?60:70
          }
            // Ajustar el tama√±o del icono
          var iconSize = [newSize, newSize];
          layer.setIcon(
            L.icon({
              iconUrl: layer.options.icon.options.iconUrl,
              iconSize: iconSize,
              iconAnchor: [iconSize[0] / 2, iconSize[1] / 2]
            })
          );
          

          
        }
      });
    }

    // Llamar a resizeMarkers en eventos de zoom y al cargar el mapa
    map.on('zoomend', resizeMarkers);
    map.whenReady(resizeMarkers);
          
      // Control de capas. Lista de los elementos de addLayersControl
      var layersControl = document.getElementsByClassName('leaflet-control-layers-list')[0];

      // div para el grupo de capas.
      var container = document.createElement('div');
      container.style.marginTop = '10px';
      
      // Crear el checkbox principal
      var mainCheckboxLabel = document.createElement('label');//Es un label porque asi los crea leaflet
      var mainCheckbox = document.createElement('input');
      mainCheckbox.type = 'checkbox';
      mainCheckbox.checked=true;
      mainCheckbox.id = 'mainCheckbox';
      instruccion=document.createElement('span')
      instruccion.innerHTML='Activa/Desactiva capas haciendo click en la casilla o √≠cono'
      instruccion.style.fontSize='16px'
      instruccion_vacia=document.createElement('div')
      instruccion_vacia.style.height='10px';
      instruccion_vacia.innerHTML=' '
      mainCheckboxLabel.appendChild(mainCheckbox);
      mainCheckboxLabel.appendChild(document.createTextNode('Empresas Relacionadas con el turismo'));
      layersControl.insertBefore(instruccion_vacia, layersControl.firstChild)
      layersControl.insertBefore(instruccion, layersControl.firstChild)
      container.appendChild(mainCheckboxLabel);
      // checkbox principal creado--------------------------
      
      // Crear subt√≠tulos
      var sublayer1 = createSubLayer('Hospedaje (Concentraci√≥n de Unidades Econ√≥micas)','üè® ');
      var sublayer2 = createSubLayer('Alimentos (Concentraci√≥n de Unidades Econ√≥micas)','üçΩÔ∏è ');
      var sublayer3 = createSubLayer('Viajes y Transporte','‚úàÔ∏èÔ∏è ');

      container.appendChild(sublayer1);
      container.appendChild(sublayer2);
      container.appendChild(sublayer3);

      // Agregar el contenedor completo al control de capas
      layersControl.appendChild(container);


      // Funci√≥n para crear los subt√≠tulos con icono de ojo
      function createSubLayer(name,icon_image) {
        var sublayerDiv = document.createElement('div');
        sublayerDiv.style.marginLeft = '15px';  // Indentaci√≥n
        
        var icon = document.createElement('span');
        icon.innerHTML = icon_image+ name;  // Icono de ojo abierto + nombre
        sublayerDiv.appendChild(icon);

        return sublayerDiv;
      }

      // Cuando el checkbox principal cambia, actualizamos el estado de las capas
      sublayer1.onclick = function() {
        if (sublayer1.firstChild.innerHTML == 'üè® ' + 'Hospedaje (Concentraci√≥n de Unidades Econ√≥micas)') {
            boolean_ya_estaba = true; 
            // Iterar sobre las capas del mapa
            map.eachLayer(function(layer) {
                if (layer.groupname == 'Hospedaje') {
                    layer_hospedaje = layer;  // Guardar la capa en la variable global
                    map.removeLayer(layer);  // Eliminar la capa del mapa
                    boolean_ya_estaba = false;  // La capa se elimin√≥ correctamente
                }
            });
            sublayer1.firstChild.innerHTML = '‚úñÔ∏è ' + 'Hospedaje (Concentraci√≥n de Unidades Econ√≥micas)';  // Ojo cerrado
    
        } else {
            if (!boolean_ya_estaba && layer_hospedaje) {
                map.addLayer(layer_hospedaje);  // Volver a agregar la capa al mapa
            }
            sublayer1.firstChild.innerHTML = 'üè® ' + 'Hospedaje (Concentraci√≥n de Unidades Econ√≥micas)';  // Ojo abierto
        }
};
      sublayer2.onclick = function() {
        if (sublayer2.firstChild.innerHTML =='üçΩÔ∏è '  + 'Alimentos (Concentraci√≥n de Unidades Econ√≥micas)') {
            boolean_ya_estaba_alimentos = true; 
            // Iterar sobre las capas del mapa
            map.eachLayer(function(layer) {
                if (layer.groupname == 'Alimentos') {
                    layer_alimentos = layer;  // Guardar la capa en la variable global
                    map.removeLayer(layer);  // Eliminar la capa del mapa
                    boolean_ya_estaba_alimentos = false;  // La capa se elimin√≥ correctamente
                }
            });
            sublayer2.firstChild.innerHTML = '‚úñÔ∏è ' + 'Alimentos (Concentraci√≥n de Unidades Econ√≥micas)';  // Ojo cerrado
    
        } else {
            if (!boolean_ya_estaba_alimentos && layer_alimentos) {
                map.addLayer(layer_alimentos);  // Volver a agregar la capa al mapa
            }
            sublayer2.firstChild.innerHTML = 'üçΩÔ∏è ' + 'Alimentos (Concentraci√≥n de Unidades Econ√≥micas)';  // Ojo abierto
        }
};
      sublayer3.onclick = function() {
        if (sublayer3.firstChild.innerHTML == '‚úàÔ∏èÔ∏è ' + 'Viajes y Transporte') {
            boolean_ya_estaba_viajes_y_t = true; 
            // Iterar sobre las capas del mapa
            map.eachLayer(function(layer) {
                if (layer.groupname == 'Viajes y Transporte') {
                    layer_viajes_y_t = layer;  // Guardar la capa en la variable global
                    map.removeLayer(layer);  // Eliminar la capa del mapa
                    boolean_ya_estaba_viajes_y_t = false;  // La capa se elimin√≥ correctamente
                }
            });
            sublayer3.firstChild.innerHTML = '‚úñÔ∏è ' + 'Viajes y Transporte';  // Ojo cerrado
    
        } else {
            if (!boolean_ya_estaba_viajes_y_t && layer_viajes_y_t) {
                map.addLayer(layer_viajes_y_t);  // Volver a agregar la capa al mapa
            }
            sublayer3.firstChild.innerHTML = '‚úàÔ∏èÔ∏è ' + 'Viajes y Transporte'  // Ojo abierto
        }
};
      mainCheckbox.onchange=function(){
        if(mainCheckbox.checked){//cambio y ahora esta prendido
          if(!sublayer1.firstChild.innerHTML.startsWith('üè® ')){
            sublayer1.click()
          }
          if(!sublayer2.firstChild.innerHTML.startsWith('üçΩÔ∏è ')){
            sublayer2.click()
          }
          if(!sublayer3.firstChild.innerHTML.startsWith('‚úàÔ∏èÔ∏è ')){
            sublayer3.click()
          }
        }
        else{//cambio y ahora esta apagado
          if(sublayer1.firstChild.innerHTML.startsWith('üè® ')){
            sublayer1.click()
          }
          if(sublayer2.firstChild.innerHTML.startsWith('üçΩÔ∏è ')){
            sublayer2.click()
          }
          if(sublayer3.firstChild.innerHTML.startsWith('‚úàÔ∏èÔ∏è ')){
            sublayer3.click()
          }
        }
      }
    let isMinimized = false;
    document.getElementById('toggleLegendButton').onclick = function() {
    let legend = el.querySelector('.legend');
      if (isMinimized) {
        // Restaurar leyenda
        legend.style.height = 'auto';
        legend.style.overflow = 'visible';
        this.innerHTML = 'X'; // Icono de minimizar
      } else {
        // Minimizar leyenda
        legend.style.height = '18px'; // Ajusta el tama√±o de la leyenda minimizada
        legend.style.overflow = 'hidden';
        this.innerHTML = '‚¨Ü'; // Icono de expandir
      }
      isMinimized = !isMinimized; // Alterna el estado
    };
    let legend_div = document.getElementsByClassName('info legend leaflet-control');
      
      // Aseguramos que el contenedor principal oculte desbordamientos
      legend_div[0].style.overflow = 'hidden';
      legend_div[0].style.position = 'relative';

      // Creamos el enlace din√°mico con el tooltip
      let linkHTML = `
        <a id='link_cnn' target='_blank' style='position: relative; display: inline-block;' href='https://sistemas.sectur.gob.mx/dgtic-app-114/web/descripcion.cfm'>
          CNN
        </a>
        <div id='informacion_cnn' style='position: absolute; top: 25px; right: 10px;left:10px; background: white; border: 1px solid black; padding: 5px; display: none; z-index: 1000;max-width:90% word-wrap: break-word;font-size:14px'>
            C√≥digo de Conducta Nacional para la Protecci√≥n de las Ni√±as, Ni√±os y Adolescentes en el Sector de los Viajes y el Turismo
          </div>
      `;
      
      // Insertamos el HTML en el elemento deseado
      legend_div[0].children[2].children[1].innerHTML += linkHTML;

      // Mostramos el tooltip al hacer hover
      document.getElementById('link_cnn').addEventListener('mouseover', function() {
        document.getElementById('informacion_cnn').style.display = 'block';
      });

      // Ocultamos el tooltip al quitar el mouse
      document.getElementById('link_cnn').addEventListener('mouseout', function() {
        document.getElementById('informacion_cnn').style.display = 'none';
      });


}")

turismo_trata=turismo_trata|>
  addLegendImage(
    images = c("Turismo/mapa web/imagenes/delitos.png",
               "Turismo/mapa web/imagenes/frontera_verde.png",
               "Turismo/mapa web/imagenes/viajes y transporte.png",
               "Turismo/mapa web/imagenes/turismo.png"),
    labels = c("Presencia de Delitos (2018-2024)",
               "Presencia de Empresas adheridas al c√≥digo ",
               "Empresas relacionadas con Viajes y Transporte",
               "Sitios Tur√≠stico"),
    width = 25,
    height = 25,
    orientation = 'vertical',
    title = htmltools::tags$div(
      style = 'font-size: 20px; text-align: center;',
      'Simbolog√≠a',
      # Agregar un bot√≥n para minimizar o eliminar la leyenda
      htmltools::tags$button(
        id = "toggleLegendButton",
        style = 'position: absolute; top: 10px; right: 10px; background-color: white; border: none; cursor: pointer;',
        "X"  # Pueomo bot√≥n de cierre o cambiarlo a para minimizar
      )
    ),
    position = 'bottomright'
  )|>addSearchFeatures(targetGroups = "buscador",
                       options = searchFeaturesOptions(
                         zoom = 12, 
                         openPopup = F,
                         firstTipSubmit =F,
                         hideMarkerOnCollapse =T))
turismo_trata
saveWidget(turismo_trata,"Github/private.gob/Tablero_Turismo/Leaflet/mapa_web_turismo.html",title = "Turismo")
