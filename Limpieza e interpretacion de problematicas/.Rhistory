}
});
}
// Inicialmente al frente
bringRegionalToFront();
map.on('baselayerchange', function(e) {
bringRegionalToFront();
});
}
")
library(leaflet.extras2)
library(leaflet.extras)
library(leaflet)
library(htmlwidgets)
library(dplyr)
mapa_web=leaflet() |>
addTiles() |>
addPolygons(data=municipios |> as("Spatial"),group = "municipios_base",label = municipios$NOMGEO,popup = "QAAAA",color = "white",fillColor = "gray",weight = 2,fillOpacity = 0.3) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Sector--Municipio`,`Desarrollo.económico--PIB per capita`,`Desarrollo.económico--PIB Turístico per capita`,`Desarrollo.económico--Empleos formales generados ante el Imss`),by='CVEGEO') |>
dplyr::filter(`Desarrollo.económico--PIB per capita`!='' | `Desarrollo.económico--Empleos formales generados ante el Imss`!='' | `Desarrollo.económico--Empleos formales generados ante el Imss`!='' ),group = "Desarrollo Económico",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 1)) ,color = "white", label=generadorPopUp(tema = 1,data_inicial = data_inicial)) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Pobreza.y.carencias.2010.2020--Rezago Educativo`:`Pobreza.y.carencias.2010.2020--Carencia por acceso a los servicios de salud`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Pobreza y Carencias",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 2)) ,color = "white",) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Salud--Camas  por cada mil habitantes`:`Salud--Consultorios por cada mil habitantes`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Salud",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 3)) ,color = "white",) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Educación--Grado promedio de escolaridad`:`Educación--% Analfabetismo`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Educación",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 4)) ,color = "white",) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Medio.Ambiente--Plantas Tratadoras de Aguas residuales por cada mil habitantes`:`Medio.Ambiente--Volumen tratado en las PTARs  (Millones m3)`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Medio Ambiente",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 5)) ,color = "white",) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Seguridad.Pública--Incidencia Delictiva del Fuero Común`:`Seguridad.Pública--Robo a casa habitación`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Seguridad Pública",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 6)) ,color = "white") |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Vivienda--Hacinamiento`:`Vivienda--% Viviendas con menor disponibilidad de computadora`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Vivienda",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 7)) ,color = "white") |>
addSearchFeatures(targetGroups = "municipios_base",options = searchFeaturesOptions(zoom=12,openPopup=F,hideMarkerOnCollapse=T)) |>
addPolygons(data=capa_de_regiones |> as("Spatial"),group = "regional_base",popup = "QAAAA",color = "black",fillColor = "gray",weight = 2,fillOpacity = 0) |>
addLayersControl(baseGroups = c("Desarrollo Económico","Pobreza y Carencias","Salud","Educación","Medio Ambiente","Seguridad Pública","Vivienda"),options = layersControlOptions(collapsed = F,autoZIndex = T)) |>
onRender("
function(el, x) {
var map = this;
function bringRegionalToFront() {
map.eachLayer(function(layer) {
if (layer.options && layer.options.group === 'regional_base') {
if (layer.bringToFront) {
layer.bringToFront();
}
}
});
}
// Inicialmente al frente
bringRegionalToFront();
map.on('baselayerchange', function(e) {
bringRegionalToFront();
});
}
")
mapa_web
mapa_web=leaflet() |>
addTiles() |>
addPolygons(data=municipios |> as("Spatial"),group = "municipios_base",label = municipios$NOMGEO,,color = "white",fillColor = "gray",weight = 2,fillOpacity = 0.3) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Sector--Municipio`,`Desarrollo.económico--PIB per capita`,`Desarrollo.económico--PIB Turístico per capita`,`Desarrollo.económico--Empleos formales generados ante el Imss`),by='CVEGEO') |>
dplyr::filter(`Desarrollo.económico--PIB per capita`!='' | `Desarrollo.económico--Empleos formales generados ante el Imss`!='' | `Desarrollo.económico--Empleos formales generados ante el Imss`!='' ),group = "Desarrollo Económico",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 1)) ,color = "white", label=generadorPopUp(tema = 1,data_inicial = data_inicial)) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Pobreza.y.carencias.2010.2020--Rezago Educativo`:`Pobreza.y.carencias.2010.2020--Carencia por acceso a los servicios de salud`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Pobreza y Carencias",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 2)) ,color = "white",) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Salud--Camas  por cada mil habitantes`:`Salud--Consultorios por cada mil habitantes`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Salud",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 3)) ,color = "white",) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Educación--Grado promedio de escolaridad`:`Educación--% Analfabetismo`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Educación",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 4)) ,color = "white",) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Medio.Ambiente--Plantas Tratadoras de Aguas residuales por cada mil habitantes`:`Medio.Ambiente--Volumen tratado en las PTARs  (Millones m3)`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Medio Ambiente",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 5)) ,color = "white",) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Seguridad.Pública--Incidencia Delictiva del Fuero Común`:`Seguridad.Pública--Robo a casa habitación`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Seguridad Pública",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 6)) ,color = "white") |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Vivienda--Hacinamiento`:`Vivienda--% Viviendas con menor disponibilidad de computadora`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Vivienda",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 7)) ,color = "white") |>
addSearchFeatures(targetGroups = "municipios_base",options = searchFeaturesOptions(zoom=12,openPopup=F,hideMarkerOnCollapse=T)) |>
addPolygons(data=capa_de_regiones |> as("Spatial"),group = "regional_base",popup = "QAAAA",color = "black",fillColor = "gray",weight = 2,fillOpacity = 0) |>
addLayersControl(baseGroups = c("Desarrollo Económico","Pobreza y Carencias","Salud","Educación","Medio Ambiente","Seguridad Pública","Vivienda"),options = layersControlOptions(collapsed = F,autoZIndex = T))
#     }
#
#     // Inicialmente al frente
#     bringRegionalToFront();
#
#     map.on('baselayerchange', function(e) {
#       bringRegionalToFront();
#     });
#   }
# ")
mapa_web
mapa_web=leaflet() |>
addTiles() |>
addPolygons(data=municipios |> as("Spatial"),group = "municipios_base",label = municipios$NOMGEO,,color = "white",fillColor = "gray",weight = 2,fillOpacity = 0.3) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Sector--Municipio`,`Desarrollo.económico--PIB per capita`,`Desarrollo.económico--PIB Turístico per capita`,`Desarrollo.económico--Empleos formales generados ante el Imss`),by='CVEGEO') |>
dplyr::filter(`Desarrollo.económico--PIB per capita`!='' | `Desarrollo.económico--Empleos formales generados ante el Imss`!='' | `Desarrollo.económico--Empleos formales generados ante el Imss`!='' ),group = "Desarrollo Económico",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 1)) ,color = "white", label=generadorPopUp(tema = 1,data_inicial = data_inicial)) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Pobreza.y.carencias.2010.2020--Rezago Educativo`:`Pobreza.y.carencias.2010.2020--Carencia por acceso a los servicios de salud`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Pobreza y Carencias",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 2)) ,color = "white",) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Salud--Camas  por cada mil habitantes`:`Salud--Consultorios por cada mil habitantes`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Salud",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 3)) ,color = "white",) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Educación--Grado promedio de escolaridad`:`Educación--% Analfabetismo`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Educación",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 4)) ,color = "white",) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Medio.Ambiente--Plantas Tratadoras de Aguas residuales por cada mil habitantes`:`Medio.Ambiente--Volumen tratado en las PTARs  (Millones m3)`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Medio Ambiente",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 5)) ,color = "white",) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Seguridad.Pública--Incidencia Delictiva del Fuero Común`:`Seguridad.Pública--Robo a casa habitación`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Seguridad Pública",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 6)) ,color = "white") |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Vivienda--Hacinamiento`:`Vivienda--% Viviendas con menor disponibilidad de computadora`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Vivienda",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 7)) ,color = "white") |>
addSearchFeatures(targetGroups = "municipios_base",options = searchFeaturesOptions(zoom=12,openPopup=F,hideMarkerOnCollapse=T)) |>
addPolygons(data=capa_de_regiones |> as("Spatial"),group = "regional_base",popup = "QAAAA",color = "black",fillColor = "gray",weight = 2,fillOpacity = 0) |>
addLayersControl(baseGroups = c("Desarrollo Económico","Pobreza y Carencias","Salud","Educación","Medio Ambiente","Seguridad Pública","Vivienda"),options = layersControlOptions(collapsed = F,autoZIndex = T))
#     }
#
#     // Inicialmente al frente
#     bringRegionalToFront();
#
#     map.on('baselayerchange', function(e) {
#       bringRegionalToFront();
#     });
#   }
# ")
mapa_web
mapa_web=leaflet() |>
addTiles() |>
addPolygons(data=municipios |> as("Spatial"),group = "municipios_base",label = municipios$NOMGEO,,color = "white",fillColor = "gray",weight = 2,fillOpacity = 0.3) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Sector--Municipio`,`Desarrollo.económico--PIB per capita`,`Desarrollo.económico--PIB Turístico per capita`,`Desarrollo.económico--Empleos formales generados ante el Imss`),by='CVEGEO') |>
dplyr::filter(`Desarrollo.económico--PIB per capita`!='' | `Desarrollo.económico--Empleos formales generados ante el Imss`!='' | `Desarrollo.económico--Empleos formales generados ante el Imss`!='' ),group = "Desarrollo Económico",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 1)) ,color = "white", popup =generadorPopUp(tema = 1,data_inicial = data_inicial)) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Pobreza.y.carencias.2010.2020--Rezago Educativo`:`Pobreza.y.carencias.2010.2020--Carencia por acceso a los servicios de salud`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Pobreza y Carencias",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 2)) ,color = "white",) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Salud--Camas  por cada mil habitantes`:`Salud--Consultorios por cada mil habitantes`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Salud",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 3)) ,color = "white",) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Educación--Grado promedio de escolaridad`:`Educación--% Analfabetismo`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Educación",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 4)) ,color = "white",) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Medio.Ambiente--Plantas Tratadoras de Aguas residuales por cada mil habitantes`:`Medio.Ambiente--Volumen tratado en las PTARs  (Millones m3)`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Medio Ambiente",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 5)) ,color = "white",) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Seguridad.Pública--Incidencia Delictiva del Fuero Común`:`Seguridad.Pública--Robo a casa habitación`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Seguridad Pública",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 6)) ,color = "white") |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Vivienda--Hacinamiento`:`Vivienda--% Viviendas con menor disponibilidad de computadora`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Vivienda",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 7)) ,color = "white") |>
addSearchFeatures(targetGroups = "municipios_base",options = searchFeaturesOptions(zoom=12,openPopup=F,hideMarkerOnCollapse=T)) |>
addPolygons(data=capa_de_regiones |> as("Spatial"),group = "regional_base",color = "black",fillColor = "gray",weight = 2,fillOpacity = 0) |>
addLayersControl(baseGroups = c("Desarrollo Económico","Pobreza y Carencias","Salud","Educación","Medio Ambiente","Seguridad Pública","Vivienda"),options = layersControlOptions(collapsed = F,autoZIndex = T))
#     }
#
#     // Inicialmente al frente
#     bringRegionalToFront();
#
#     map.on('baselayerchange', function(e) {
#       bringRegionalToFront();
#     });
#   }
# ")
mapa_web
www
names(base_filtrada)
generadorPopUp=function(tema=1,data_inicial=data_inicial){
posibles_temas=unique(copia_colnames)[3:9]
tema_seleccionado=posibles_temas[tema]
print(tema_seleccionado)
base_filtrada=data_inicial |>
dplyr::select(CVEGEO,`Sector--Municipio`,dplyr::matches(paste0(tema_seleccionado,"--")))
# zz=list()
# zz=append(zz,)
# lapply(names(base_filtrada), function(col_name) {
#   values <- data_inicial[[col_name]]
#   list(name = col_name, values = values)
# }) |> lapply(FUN=\(z){paste0(z$name," .....",z$values)})
#  |> dplyr::select(-CVEGEO) |>
#   lapply(FUN=\(x){
#     zz=append(zz,
#               names(x)
#               )
#     print(names(x))
#   })
# return(zz)
#La idea es meter en una lista los datos que se mostrarán en cada renglón de la tarjeta.
#E.g.
#Municipio: mun_i
#indice_1: valor_1
#...
#indice_n: valor_n
www=lapply(names(base_filtrada), function(col_name) {
values <- base_filtrada[[col_name]]
list(name = col_name, values = values)
}) |> lapply(FUN=\(z){paste0(z$name,": ",z$values)}) |> lapply(FUN=\(w) {
ifelse(substr(w,start = nchar(w),nchar(w))==' ',"",w)
})
print(www)
z=c(1:84)*NA
for(i in 1:84){
z[i]=paste("<b>",www[[2]][i],"</b>", "<br>",
www[[3]][i]
)  }
return(z)
# paste(
#   "<b>Municipio: </b>", htmlEscape(turismo_shp$NOM_MUN), "<br>",
#   ifelse(!is.na(turismo_shp$empresas_a),
#          paste0("<b>Empresas adheridas al código CCN: </b>",turismo_shp$empresas_a),
#          ""),
#   ifelse(!is.na(turismo_shp$incidentes_total),
#          paste0("<table style='border-collapse: collapse; width: 100%; font-size: 12px;'>",
#                 "<tr><th style='border: 1px solid black; padding: 4px; text-align: center;'>Tipo de Delito</th>",
#                 "<th style='border: 1px solid black; padding: 4px; text-align: center;'>Cantidad</th></tr>"),
#          ""),
#
#
#   # Para cada delito, solo lo mostramos si el valor es mayor a 0
#   ifelse(turismo_shp$`Explotación de la prostitución ajena` > 0,
#          paste0("<tr><td style='border: 1px solid black; padding: 4px; text-align: center;'>Explotación de la prostitución ajena</td><td style='border: 1px solid black; padding: 4px; text-align: center;'>", turismo_shp$`Explotación de la prostitución ajena`, "</td></tr>"),
#          ""),
#
#   ifelse(turismo_shp$`Explotación laboral` > 0,
#          paste0("<tr><td style='border: 1px solid black; padding: 4px; text-align: center;'>Explotación laboral</td><td style='border: 1px solid black; padding: 4px; text-align: center;'>", turismo_shp$`Explotación laboral`, "</td></tr>"),
#          ""),
#
#   ifelse(turismo_shp$`Circulación de pornografía` > 0,
#          paste0("<tr><td style='border: 1px solid black; padding: 4px; text-align: center;'>Circulación de pornografía</td><td style='border: 1px solid black; padding: 4px; text-align: center;'>", turismo_shp$`Circulación de pornografía`, "</td></tr>"),
#          ""),
#
#   ifelse(turismo_shp$`Utilización de menores de 18 años en hechos delictivos` > 0,
#          paste0("<tr><td style='border: 1px solid black; padding: 4px; text-align: center;'>Utilización de menores de 18 años en hechos delictivos</td><td style='border: 1px solid black; padding: 4px; text-align: center;'>", turismo_shp$`Utilización de menores de 18 años en hechos delictivos`, "</td></tr>"),
#          ""),
#
#   ifelse(turismo_shp$`Otras formas de explotación sexual` > 0,
#          paste0("<tr><td style='border: 1px solid black; padding: 4px; text-align: center;'>Otras formas de explotación sexual</td><td style='border: 1px solid black; padding: 4px; text-align: center;'>", turismo_shp$`Otras formas de explotación sexual`, "</td></tr>"),
#          ""),
#
#   ifelse(turismo_shp$Esclavitud > 0,
#          paste0("<tr><td style='border: 1px solid black; padding: 4px; text-align: center;'>Esclavitud</td><td style='border: 1px solid black; padding: 4px; text-align: center;'>", turismo_shp$Esclavitud, "</td></tr>"),
#          ""),
#   ifelse(!is.na(turismo_shp$incidentes_total),
#          paste0("<tr><th style='border: 1px solid black; padding: 4px; text-align: center;'>Total</th><td style='border: 1px solid black; padding: 4px; text-align: center;'>", turismo_shp$incidentes_total, "</td></tr>"),
#          ""),
#
#
#   "</table>"
# ) |>
#   sapply(FUN = function(x) HTML(x), USE.NAMES = F) |>
#   `class<-`("html") |> return()
#labelOptions = labelOptions(textsize = 14, direction = "top")
}
generadorPopUp(tema = 1,data_inicial = data_inicial)
generadorPopUp=function(tema=1,data_inicial=data_inicial){
posibles_temas=unique(copia_colnames)[3:9]
tema_seleccionado=posibles_temas[tema]
print(tema_seleccionado)
base_filtrada=data_inicial |>
dplyr::select(CVEGEO,`Sector--Municipio`,dplyr::matches(paste0(tema_seleccionado,"--")))
# zz=list()
# zz=append(zz,)
# lapply(names(base_filtrada), function(col_name) {
#   values <- data_inicial[[col_name]]
#   list(name = col_name, values = values)
# }) |> lapply(FUN=\(z){paste0(z$name," .....",z$values)})
#  |> dplyr::select(-CVEGEO) |>
#   lapply(FUN=\(x){
#     zz=append(zz,
#               names(x)
#               )
#     print(names(x))
#   })
# return(zz)
#La idea es meter en una lista los datos que se mostrarán en cada renglón de la tarjeta.
#E.g.
#Municipio: mun_i
#indice_1: valor_1
#...
#indice_n: valor_n
www=lapply(names(base_filtrada), function(col_name) {
values <- base_filtrada[[col_name]]
list(name = col_name, values = values)
}) |> lapply(FUN=\(z){paste0(z$name,": ",z$values)}) |> lapply(FUN=\(w) {
ifelse(substr(w,start = nchar(w),nchar(w))==' ',"",w)
})
#print(www)
z=c(1:84)*NA
for(i in 1:84){
z[i]=paste("<b>",www[[2]][i],"</b>", "<br>",
www[[3]][i], "<br>",
www[[4]][i], "<br>",
www[[5]][i], "<br>",
)  }
return(z)
# paste(
#   "<b>Municipio: </b>", htmlEscape(turismo_shp$NOM_MUN), "<br>",
#   ifelse(!is.na(turismo_shp$empresas_a),
#          paste0("<b>Empresas adheridas al código CCN: </b>",turismo_shp$empresas_a),
#          ""),
#   ifelse(!is.na(turismo_shp$incidentes_total),
#          paste0("<table style='border-collapse: collapse; width: 100%; font-size: 12px;'>",
#                 "<tr><th style='border: 1px solid black; padding: 4px; text-align: center;'>Tipo de Delito</th>",
#                 "<th style='border: 1px solid black; padding: 4px; text-align: center;'>Cantidad</th></tr>"),
#          ""),
#
#
#   # Para cada delito, solo lo mostramos si el valor es mayor a 0
#   ifelse(turismo_shp$`Explotación de la prostitución ajena` > 0,
#          paste0("<tr><td style='border: 1px solid black; padding: 4px; text-align: center;'>Explotación de la prostitución ajena</td><td style='border: 1px solid black; padding: 4px; text-align: center;'>", turismo_shp$`Explotación de la prostitución ajena`, "</td></tr>"),
#          ""),
#
#   ifelse(turismo_shp$`Explotación laboral` > 0,
#          paste0("<tr><td style='border: 1px solid black; padding: 4px; text-align: center;'>Explotación laboral</td><td style='border: 1px solid black; padding: 4px; text-align: center;'>", turismo_shp$`Explotación laboral`, "</td></tr>"),
#          ""),
#
#   ifelse(turismo_shp$`Circulación de pornografía` > 0,
#          paste0("<tr><td style='border: 1px solid black; padding: 4px; text-align: center;'>Circulación de pornografía</td><td style='border: 1px solid black; padding: 4px; text-align: center;'>", turismo_shp$`Circulación de pornografía`, "</td></tr>"),
#          ""),
#
#   ifelse(turismo_shp$`Utilización de menores de 18 años en hechos delictivos` > 0,
#          paste0("<tr><td style='border: 1px solid black; padding: 4px; text-align: center;'>Utilización de menores de 18 años en hechos delictivos</td><td style='border: 1px solid black; padding: 4px; text-align: center;'>", turismo_shp$`Utilización de menores de 18 años en hechos delictivos`, "</td></tr>"),
#          ""),
#
#   ifelse(turismo_shp$`Otras formas de explotación sexual` > 0,
#          paste0("<tr><td style='border: 1px solid black; padding: 4px; text-align: center;'>Otras formas de explotación sexual</td><td style='border: 1px solid black; padding: 4px; text-align: center;'>", turismo_shp$`Otras formas de explotación sexual`, "</td></tr>"),
#          ""),
#
#   ifelse(turismo_shp$Esclavitud > 0,
#          paste0("<tr><td style='border: 1px solid black; padding: 4px; text-align: center;'>Esclavitud</td><td style='border: 1px solid black; padding: 4px; text-align: center;'>", turismo_shp$Esclavitud, "</td></tr>"),
#          ""),
#   ifelse(!is.na(turismo_shp$incidentes_total),
#          paste0("<tr><th style='border: 1px solid black; padding: 4px; text-align: center;'>Total</th><td style='border: 1px solid black; padding: 4px; text-align: center;'>", turismo_shp$incidentes_total, "</td></tr>"),
#          ""),
#
#
#   "</table>"
# ) |>
#   sapply(FUN = function(x) HTML(x), USE.NAMES = F) |>
#   `class<-`("html") |> return()
#labelOptions = labelOptions(textsize = 14, direction = "top")
}
generadorPopUp(tema = 1,data_inicial = data_inicial)
generadorPopUp=function(tema=1,data_inicial=data_inicial){
posibles_temas=unique(copia_colnames)[3:9]
tema_seleccionado=posibles_temas[tema]
print(tema_seleccionado)
base_filtrada=data_inicial |>
dplyr::select(CVEGEO,`Sector--Municipio`,dplyr::matches(paste0(tema_seleccionado,"--")))
# zz=list()
# zz=append(zz,)
# lapply(names(base_filtrada), function(col_name) {
#   values <- data_inicial[[col_name]]
#   list(name = col_name, values = values)
# }) |> lapply(FUN=\(z){paste0(z$name," .....",z$values)})
#  |> dplyr::select(-CVEGEO) |>
#   lapply(FUN=\(x){
#     zz=append(zz,
#               names(x)
#               )
#     print(names(x))
#   })
# return(zz)
#La idea es meter en una lista los datos que se mostrarán en cada renglón de la tarjeta.
#E.g.
#Municipio: mun_i
#indice_1: valor_1
#...
#indice_n: valor_n
www=lapply(names(base_filtrada), function(col_name) {
values <- base_filtrada[[col_name]]
list(name = col_name, values = values)
}) |> lapply(FUN=\(z){paste0(z$name,": ",z$values)}) |> lapply(FUN=\(w) {
ifelse(substr(w,start = nchar(w),nchar(w))==' ',"",w)
})
#print(www)
z=c(1:84)*NA
for(i in 1:84){
z[i]=paste("<b>",www[[2]][i],"</b>", "<br>",
www[[3]][i], "<br>",
www[[4]][i], "<br>",
www[[5]][i], "<br>"
)  }
return(z)
# paste(
#   "<b>Municipio: </b>", htmlEscape(turismo_shp$NOM_MUN), "<br>",
#   ifelse(!is.na(turismo_shp$empresas_a),
#          paste0("<b>Empresas adheridas al código CCN: </b>",turismo_shp$empresas_a),
#          ""),
#   ifelse(!is.na(turismo_shp$incidentes_total),
#          paste0("<table style='border-collapse: collapse; width: 100%; font-size: 12px;'>",
#                 "<tr><th style='border: 1px solid black; padding: 4px; text-align: center;'>Tipo de Delito</th>",
#                 "<th style='border: 1px solid black; padding: 4px; text-align: center;'>Cantidad</th></tr>"),
#          ""),
#
#
#   # Para cada delito, solo lo mostramos si el valor es mayor a 0
#   ifelse(turismo_shp$`Explotación de la prostitución ajena` > 0,
#          paste0("<tr><td style='border: 1px solid black; padding: 4px; text-align: center;'>Explotación de la prostitución ajena</td><td style='border: 1px solid black; padding: 4px; text-align: center;'>", turismo_shp$`Explotación de la prostitución ajena`, "</td></tr>"),
#          ""),
#
#   ifelse(turismo_shp$`Explotación laboral` > 0,
#          paste0("<tr><td style='border: 1px solid black; padding: 4px; text-align: center;'>Explotación laboral</td><td style='border: 1px solid black; padding: 4px; text-align: center;'>", turismo_shp$`Explotación laboral`, "</td></tr>"),
#          ""),
#
#   ifelse(turismo_shp$`Circulación de pornografía` > 0,
#          paste0("<tr><td style='border: 1px solid black; padding: 4px; text-align: center;'>Circulación de pornografía</td><td style='border: 1px solid black; padding: 4px; text-align: center;'>", turismo_shp$`Circulación de pornografía`, "</td></tr>"),
#          ""),
#
#   ifelse(turismo_shp$`Utilización de menores de 18 años en hechos delictivos` > 0,
#          paste0("<tr><td style='border: 1px solid black; padding: 4px; text-align: center;'>Utilización de menores de 18 años en hechos delictivos</td><td style='border: 1px solid black; padding: 4px; text-align: center;'>", turismo_shp$`Utilización de menores de 18 años en hechos delictivos`, "</td></tr>"),
#          ""),
#
#   ifelse(turismo_shp$`Otras formas de explotación sexual` > 0,
#          paste0("<tr><td style='border: 1px solid black; padding: 4px; text-align: center;'>Otras formas de explotación sexual</td><td style='border: 1px solid black; padding: 4px; text-align: center;'>", turismo_shp$`Otras formas de explotación sexual`, "</td></tr>"),
#          ""),
#
#   ifelse(turismo_shp$Esclavitud > 0,
#          paste0("<tr><td style='border: 1px solid black; padding: 4px; text-align: center;'>Esclavitud</td><td style='border: 1px solid black; padding: 4px; text-align: center;'>", turismo_shp$Esclavitud, "</td></tr>"),
#          ""),
#   ifelse(!is.na(turismo_shp$incidentes_total),
#          paste0("<tr><th style='border: 1px solid black; padding: 4px; text-align: center;'>Total</th><td style='border: 1px solid black; padding: 4px; text-align: center;'>", turismo_shp$incidentes_total, "</td></tr>"),
#          ""),
#
#
#   "</table>"
# ) |>
#   sapply(FUN = function(x) HTML(x), USE.NAMES = F) |>
#   `class<-`("html") |> return()
#labelOptions = labelOptions(textsize = 14, direction = "top")
}
generadorPopUp(tema = 1,data_inicial = data_inicial)
mapa_web=leaflet() |>
addTiles() |>
addPolygons(data=municipios |> as("Spatial"),group = "municipios_base",label = municipios$NOMGEO,,color = "white",fillColor = "gray",weight = 2,fillOpacity = 0.3) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Sector--Municipio`,`Desarrollo.económico--PIB per capita`,`Desarrollo.económico--PIB Turístico per capita`,`Desarrollo.económico--Empleos formales generados ante el Imss`),by='CVEGEO') |>
dplyr::filter(`Desarrollo.económico--PIB per capita`!='' | `Desarrollo.económico--Empleos formales generados ante el Imss`!='' | `Desarrollo.económico--Empleos formales generados ante el Imss`!='' ),group = "Desarrollo Económico",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 1)) ,color = "white", popup =generadorPopUp(tema = 1,data_inicial = data_inicial)) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Pobreza.y.carencias.2010.2020--Rezago Educativo`:`Pobreza.y.carencias.2010.2020--Carencia por acceso a los servicios de salud`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Pobreza y Carencias",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 2)) ,color = "white",) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Salud--Camas  por cada mil habitantes`:`Salud--Consultorios por cada mil habitantes`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Salud",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 3)) ,color = "white",) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Educación--Grado promedio de escolaridad`:`Educación--% Analfabetismo`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Educación",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 4)) ,color = "white",) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Medio.Ambiente--Plantas Tratadoras de Aguas residuales por cada mil habitantes`:`Medio.Ambiente--Volumen tratado en las PTARs  (Millones m3)`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Medio Ambiente",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 5)) ,color = "white",) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Seguridad.Pública--Incidencia Delictiva del Fuero Común`:`Seguridad.Pública--Robo a casa habitación`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Seguridad Pública",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 6)) ,color = "white") |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Vivienda--Hacinamiento`:`Vivienda--% Viviendas con menor disponibilidad de computadora`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Vivienda",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 7)) ,color = "white") |>
addSearchFeatures(targetGroups = "municipios_base",options = searchFeaturesOptions(zoom=12,openPopup=F,hideMarkerOnCollapse=T)) |>
addPolygons(data=capa_de_regiones |> as("Spatial"),group = "regional_base",color = "black",fillColor = "gray",weight = 2,fillOpacity = 0) |>
addLayersControl(baseGroups = c("Desarrollo Económico","Pobreza y Carencias","Salud","Educación","Medio Ambiente","Seguridad Pública","Vivienda"),options = layersControlOptions(collapsed = F,autoZIndex = T))
#     }
#
#     // Inicialmente al frente
#     bringRegionalToFront();
#
#     map.on('baselayerchange', function(e) {
#       bringRegionalToFront();
#     });
#   }
# ")
mapa_web
denue=read.csv("../../../ASUS Gamer Jair/Complejidad económica/denue 2024 nov/conjunto_de_datos/denue_inegi_13_.csv")
View(denue)
denue=read.csv("../../../ASUS Gamer Jair/Complejidad económica/denue 2024 nov/conjunto_de_datos/denue_inegi_13_.csv")
View(denue)
denue=read.csv("../../../ASUS Gamer Jair/Complejidad económica/denue 2024 nov/conjunto_de_datos/denue_inegi_13_.csv",fileEncoding = "latin1")
generadorPopUp(tema = 1,data_inicial = data_inicial)
gsub("<br>  <br>","",generadorPopUp(tema = 1,data_inicial = data_inicial))
mapa_web=leaflet() |>
addTiles() |>
addPolygons(data=municipios |> as("Spatial"),group = "municipios_base",label = municipios$NOMGEO,,color = "white",fillColor = "gray",weight = 2,fillOpacity = 0.3) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Sector--Municipio`,`Desarrollo.económico--PIB per capita`,`Desarrollo.económico--PIB Turístico per capita`,`Desarrollo.económico--Empleos formales generados ante el Imss`),by='CVEGEO') |>
dplyr::filter(`Desarrollo.económico--PIB per capita`!='' | `Desarrollo.económico--Empleos formales generados ante el Imss`!='' | `Desarrollo.económico--Empleos formales generados ante el Imss`!='' ),group = "Desarrollo Económico",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 1)) ,color = "white", popup =gsub("<br>  <br>","",generadorPopUp(tema = 1,data_inicial = data_inicial))) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Pobreza.y.carencias.2010.2020--Rezago Educativo`:`Pobreza.y.carencias.2010.2020--Carencia por acceso a los servicios de salud`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Pobreza y Carencias",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 2)) ,color = "white",) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Salud--Camas  por cada mil habitantes`:`Salud--Consultorios por cada mil habitantes`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Salud",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 3)) ,color = "white",) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Educación--Grado promedio de escolaridad`:`Educación--% Analfabetismo`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Educación",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 4)) ,color = "white",) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Medio.Ambiente--Plantas Tratadoras de Aguas residuales por cada mil habitantes`:`Medio.Ambiente--Volumen tratado en las PTARs  (Millones m3)`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Medio Ambiente",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 5)) ,color = "white",) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Seguridad.Pública--Incidencia Delictiva del Fuero Común`:`Seguridad.Pública--Robo a casa habitación`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Seguridad Pública",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 6)) ,color = "white") |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Vivienda--Hacinamiento`:`Vivienda--% Viviendas con menor disponibilidad de computadora`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Vivienda",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 7)) ,color = "white") |>
addSearchFeatures(targetGroups = "municipios_base",options = searchFeaturesOptions(zoom=12,openPopup=F,hideMarkerOnCollapse=T)) |>
addPolygons(data=capa_de_regiones |> as("Spatial"),group = "regional_base",color = "black",fillColor = "gray",weight = 2,fillOpacity = 0) |>
addLayersControl(baseGroups = c("Desarrollo Económico","Pobreza y Carencias","Salud","Educación","Medio Ambiente","Seguridad Pública","Vivienda"),options = layersControlOptions(collapsed = F,autoZIndex = T))
library(sf)
library(leaflet.extras2)
library(leaflet.extras)
library(leaflet)
library(htmlwidgets)
library(dplyr)
mapa_web=leaflet() |>
addTiles() |>
addPolygons(data=municipios |> as("Spatial"),group = "municipios_base",label = municipios$NOMGEO,,color = "white",fillColor = "gray",weight = 2,fillOpacity = 0.3) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Sector--Municipio`,`Desarrollo.económico--PIB per capita`,`Desarrollo.económico--PIB Turístico per capita`,`Desarrollo.económico--Empleos formales generados ante el Imss`),by='CVEGEO') |>
dplyr::filter(`Desarrollo.económico--PIB per capita`!='' | `Desarrollo.económico--Empleos formales generados ante el Imss`!='' | `Desarrollo.económico--Empleos formales generados ante el Imss`!='' ),group = "Desarrollo Económico",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 1)) ,color = "white", popup =gsub("<br>  <br>","",generadorPopUp(tema = 1,data_inicial = data_inicial))) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Pobreza.y.carencias.2010.2020--Rezago Educativo`:`Pobreza.y.carencias.2010.2020--Carencia por acceso a los servicios de salud`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Pobreza y Carencias",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 2)) ,color = "white",) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Salud--Camas  por cada mil habitantes`:`Salud--Consultorios por cada mil habitantes`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Salud",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 3)) ,color = "white",) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Educación--Grado promedio de escolaridad`:`Educación--% Analfabetismo`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Educación",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 4)) ,color = "white",) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Medio.Ambiente--Plantas Tratadoras de Aguas residuales por cada mil habitantes`:`Medio.Ambiente--Volumen tratado en las PTARs  (Millones m3)`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Medio Ambiente",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 5)) ,color = "white",) |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Seguridad.Pública--Incidencia Delictiva del Fuero Común`:`Seguridad.Pública--Robo a casa habitación`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Seguridad Pública",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 6)) ,color = "white") |>
addPolygons(data=merge(municipios |> dplyr::select(CVEGEO),data_inicial |> dplyr::select(CVEGEO,`Vivienda--Hacinamiento`:`Vivienda--% Viviendas con menor disponibilidad de computadora`),by='CVEGEO') |>
dplyr::filter_at(vars(-CVEGEO,-geometry), any_vars(.!='')),group = "Vivienda",fillColor  = "red",fillOpacity = corteDeColores(generarPaleta(tema = 7)) ,color = "white") |>
addSearchFeatures(targetGroups = "municipios_base",options = searchFeaturesOptions(zoom=12,openPopup=F,hideMarkerOnCollapse=T)) |>
addPolygons(data=capa_de_regiones |> as("Spatial"),group = "regional_base",color = "black",fillColor = "gray",weight = 2,fillOpacity = 0) |>
addLayersControl(baseGroups = c("Desarrollo Económico","Pobreza y Carencias","Salud","Educación","Medio Ambiente","Seguridad Pública","Vivienda"),options = layersControlOptions(collapsed = F,autoZIndex = T))
#     }
#
#     // Inicialmente al frente
#     bringRegionalToFront();
#
#     map.on('baselayerchange', function(e) {
#       bringRegionalToFront();
#     });
#   }
# ")
mapa_web
corteDeColores(generarPaleta(tema = 1))
View(data_inicial)
